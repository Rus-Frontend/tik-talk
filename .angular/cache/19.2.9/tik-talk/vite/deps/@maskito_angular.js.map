{
  "version": 3,
  "sources": ["../../../../../../node_modules/@maskito/angular/fesm2022/maskito-angular.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { inject, ElementRef, NgZone, Directive, Input, Pipe } from '@angular/core';\nimport { DefaultValueAccessor } from '@angular/forms';\nimport { MASKITO_DEFAULT_ELEMENT_PREDICATE, maskitoTransform, Maskito, MASKITO_DEFAULT_OPTIONS } from '@maskito/core';\nclass MaskitoDirective {\n  constructor() {\n    this.elementRef = inject(ElementRef).nativeElement;\n    this.ngZone = inject(NgZone);\n    this.maskedElement = null;\n    this.options = null;\n    this.elementPredicate = MASKITO_DEFAULT_ELEMENT_PREDICATE;\n    const accessor = inject(DefaultValueAccessor, {\n      self: true,\n      optional: true\n    });\n    if (accessor) {\n      const original = accessor.writeValue.bind(accessor);\n      accessor.writeValue = value => {\n        original(this.options ? maskitoTransform(String(value ?? ''), this.options) : value);\n      };\n    }\n  }\n  async ngOnChanges() {\n    const {\n      elementPredicate,\n      options,\n      maskedElement,\n      elementRef,\n      ngZone\n    } = this;\n    maskedElement?.destroy();\n    if (!options) {\n      return;\n    }\n    const predicateResult = await elementPredicate(elementRef);\n    if (this.elementPredicate !== elementPredicate || this.options !== options) {\n      // Ignore the result of the predicate if the\n      // maskito element (or its options) has changed before the predicate was resolved.\n      return;\n    }\n    ngZone.runOutsideAngular(() => {\n      this.maskedElement = new Maskito(predicateResult, options);\n    });\n  }\n  ngOnDestroy() {\n    this.maskedElement?.destroy();\n  }\n  static {\n    this.ɵfac = function MaskitoDirective_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MaskitoDirective)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaskitoDirective,\n      selectors: [[\"\", \"maskito\", \"\"]],\n      inputs: {\n        options: [0, \"maskito\", \"options\"],\n        elementPredicate: [0, \"maskitoElement\", \"elementPredicate\"]\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaskitoDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[maskito]'\n    }]\n  }], function () {\n    return [];\n  }, {\n    options: [{\n      type: Input,\n      args: ['maskito']\n    }],\n    elementPredicate: [{\n      type: Input,\n      args: ['maskitoElement']\n    }]\n  });\n})();\nclass MaskitoPipe {\n  transform(value, maskitoOptions) {\n    return maskitoTransform(String(value ?? ''), maskitoOptions ?? MASKITO_DEFAULT_OPTIONS);\n  }\n  static {\n    this.ɵfac = function MaskitoPipe_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MaskitoPipe)();\n    };\n  }\n  static {\n    this.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n      name: \"maskito\",\n      type: MaskitoPipe,\n      pure: true\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaskitoPipe, [{\n    type: Pipe,\n    args: [{\n      standalone: true,\n      name: 'maskito'\n    }]\n  }], null, null);\n})();\nclass MaskitoPattern {\n  constructor() {\n    this.maskitoDirective = inject(MaskitoDirective, {\n      self: true\n    });\n  }\n  set regExpStr(pattern) {\n    this.maskitoDirective.options = {\n      mask: typeof pattern === 'string' ? new RegExp(`^${pattern}$`) : pattern\n    };\n    this.maskitoDirective.ngOnChanges();\n  }\n  static {\n    this.ɵfac = function MaskitoPattern_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || MaskitoPattern)();\n    };\n  }\n  static {\n    this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: MaskitoPattern,\n      selectors: [[\"\", \"maskitoPattern\", \"\"]],\n      inputs: {\n        regExpStr: [0, \"maskitoPattern\", \"regExpStr\"]\n      },\n      features: [i0.ɵɵHostDirectivesFeature([MaskitoDirective])]\n    });\n  }\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MaskitoPattern, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[maskitoPattern]',\n      hostDirectives: [MaskitoDirective]\n    }]\n  }], null, {\n    regExpStr: [{\n      type: Input,\n      args: ['maskitoPattern']\n    }]\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MaskitoDirective, MaskitoPattern, MaskitoPipe };\n"],
  "mappings": "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",
  "names": []
}
